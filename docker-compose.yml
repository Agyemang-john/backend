services:
  web:
    build: .
    entrypoint: /entrypoint.sh
    command: gunicorn ecommerce.wsgi:application --bind 0.0.0.0:8000 --workers 3 --threads 3 --worker-class gthread --timeout 120 --max-requests 1000 --max-requests-jitter 50
    environment:
      - DJANGO_SETTINGS_MODULE=ecommerce.settings
      - DJANGO_ENV=production
    volumes:
      - .:/app
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  nginx:
    image: nginx:1.25
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /root/backend/certbot-etc:/etc/letsencrypt        # ðŸ‘ˆ FIXED
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - web
    restart: always

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - /root/backend/certbot-etc:/etc/letsencrypt        # ðŸ‘ˆ FIXED
      - certbot-var:/var/lib/letsencrypt
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/lib/letsencrypt --deploy-hook 'nginx -s reload'; sleep 12h; done"
    restart: always

  celery:
    build: .
    command: celery -A ecommerce worker --loglevel=info --concurrency=2
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  celery-beat:
    build: .
    command: celery -A ecommerce beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  redis:
    image: redis:7
    command:
      - redis-server
      - --appendonly
      - "yes"
      - --appendfsync
      - everysec
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data

volumes:
  redis_data:
  certbot-var:
